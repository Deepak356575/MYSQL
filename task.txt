//Creating a database

mysql> create database e_commerce;
Query OK, 1 row affected (0.01 sec)



//selecting the database

mysql> use e_commerce;
Database changed



//creating a customer table

mysql> create table customer(
    -> id int auto_increment primary key,
    -> name varchar(100) not null,
    -> email varchar(100) not null unique,
    -> address text);
Query OK, 0 rows affected (0.02 sec)



//creating  orders table
mysql> create table orders(
    -> id int auto_increment primary key,
    -> customer_id int not null,
    -> order_date date not null,
    -> total decimal(10,2) not null,
    -> foreign key (customer_id) references customer(id));
    Query OK, 0 rows affected (0.02 sec)



// creating products table

mysql> create table products (
    -> id int auto_increment primary key,
    -> name varchar(100) not null,
    -> price decimal (10,2) not null,
    -> description text
    -> );
Query OK, 0 rows affected (0.01 sec)



//create a order items table

mysql> create table order_items (
    ->     id int auto_increment primary key,
    ->     order_id int not null,
    ->     product_id int not null,,
    ->     quantity int default 1,
    ->     foreign key (order_id) references orders(id),
    ->     foreign key(product_id) references products(id)
    -> );
Query OK, 0 rows affected (0.02 sec)



//Insert Data into Customers Table

mysql> INSERT INTO customer (name, email, address) VALUES
    -> ('a', 'a@gmail.com', '1st street'),
    -> ('b', 'b@gmail.com', '2nd street'),
    -> ('c', 'c@gmail.com', '3rd street'),
    -> ('d', 'd@gmail.com', '4th street'),
    -> ('e', 'e@gmail.com', '5th street'),
    -> ('f', 'f@gmail.com', '6th street');
Query OK, 6 rows affected (0.01 sec)
Records: 6  Duplicates: 0  Warnings: 0


//Insert Data into Products Table

mysql> INSERT INTO products (name, price, description) VALUES
    -> ('Product1', 10.99, 'This is product 1'),
    -> ('Product2', 20.99, 'This is product 2'),
    -> ('Product3', 30.99, 'This is product 3'),
    -> ('Product4', 40.99, 'This is product 4'),
    -> ('Product5', 50.99, 'This is product 5'),
    -> ('Product6', 60.99, 'This is product 6');
Query OK, 6 rows affected (0.01 sec)
Records: 6  Duplicates: 0  Warnings: 0



//Insert Data into Orders Table

mysql> INSERT INTO orders (customer_id, order_date, total_amount) values
    -> (1, CURDATE() - INTERVAL 10 DAY, 100.00),
    -> (2, CURDATE() - INTERVAL 5 DAY, 200.00),
    -> (3, CURDATE() - INTERVAL 40 DAY, 150.00),
    -> (4, CURDATE() - INTERVAL 20 DAY, 250.00),
    -> (5, CURDATE() - INTERVAL 30 DAY, 300.00),
    -> (6, CURDATE() - INTERVAL 15 DAY, 400.00);
Query OK, 6 rows affected (0.01 sec)
Records: 6  Duplicates: 0  Warnings: 0


// inser data into order_items table

mysql> INSERT INTO order_items (order_id, product_id, quantity) VALUES
    -> (1, 1, 2),
    -> (1, 2, 3),
    -> (2, 3, 1),
    -> (3, 4, 2),
    -> (4, 5, 3),
    -> (5, 6, 4),
    -> (6, 1, 1),
    -> (6, 2, 2),
    -> (6, 3, 3),
    -> (6, 4, 4);
Query OK, 10 rows affected (0.00 sec)
Records: 10  Duplicates: 0  Warnings: 0




//QUERIES//

//Retrieve all customers who have placed an order in the last 30 days.

mysql> select distinct customer.name, customer.email from customer
    -> join orders on customer.id = orders.customer_id
    -> where orders.order_date >= curdate() - interval 30 day;
+------+-------------+
| name | email       |
+------+-------------+
| a    | a@gmail.com |
| b    | b@gmail.com |
| d    | d@gmail.com |
| e    | e@gmail.com |
| f    | f@gmail.com |
+------+-------------+
5 rows in set (0.01 sec)


//Get the total amount of all orders placed by each customer.

mysql> select customer.name, sum(orders.total_amount) as total_spent from customer
    -> join orders ON customer.id = orders.customer_id
    -> group by customer.name with rollup;
+------+-------------+
| name | total_spent |
+------+-------------+
| a    |      100.00 |
| b    |      200.00 |
| c    |      150.00 |
| d    |      250.00 |
| e    |      300.00 |
| f    |      400.00 |
| NULL |     1400.00 |
+------+-------------+
7 rows in set (0.00 sec)



// Update the price of Product3 to 45.00

mysql> update products
    -> set price = 45.00
    -> where name ='product3';
Query OK, 1 row affected (0.01 sec)
Rows matched: 1  Changed: 1  Warnings: 0


//Add a new column discount to the products table.

mysql> alter table products
    -> add column discount decimal (5,2);
Query OK, 0 rows affected (0.01 sec)
Records: 0  Duplicates: 0  Warnings: 0


//Retrieve the top 3 products with the highest price

mysql> select name, price from products
    -> order by price desc
    -> limit 3;
+----------+-------+
| name     | price |
+----------+-------+
| Product6 | 60.99 |
| Product5 | 50.99 |
| Product3 | 45.00 |
+----------+-------+
3 rows in set (0.00 sec)


//Get the names of customers who have ordered Product1.

mysql> select customer.name from orders
    ->      join customer on orders.customer_id = customer.id
    ->      join  order_items on orders.id = order_items.order_id
    ->      join  products on order_items.product_id = products.id
    ->      where products.name = 'product1';
+------+
| name |
+------+
| a    |
| f    |
+------+
2 rows in set (0.00 sec)



//Join the orders and customers tables to retrieve the customer's name and order date for each order

mysql> select customer.name as customer_name, orders.order_date from customer
    -> join orders on customer.id = orders.customer_id;
+---------------+------------+
| customer_name | order_date |
+---------------+------------+
| a             | 2024-11-24 |
| b             | 2024-11-29 |
| c             | 2024-10-25 |
| d             | 2024-11-14 |
| e             | 2024-11-04 |
| f             | 2024-11-19 |
+---------------+------------+
6 rows in set (0.00 sec)



//Retrieve the orders with a total amount greater than 150.00.

mysql> select * from orders
    -> where total_amount >='150.00';
+----+-------------+------------+--------------+
| id | customer_id | order_date | total_amount |
+----+-------------+------------+--------------+
|  2 |           2 | 2024-11-29 |       200.00 |
|  3 |           3 | 2024-10-25 |       150.00 |
|  4 |           4 | 2024-11-14 |       250.00 |
|  5 |           5 | 2024-11-04 |       300.00 |
|  6 |           6 | 2024-11-19 |       400.00 |
+----+-------------+------------+--------------+
5 rows in set (0.00 sec)



//Normalize the database by creating a separate table for order items and updating the orders table to reference the order_items table.

mysql> create table order_items (
    ->     id int auto_increment primary key,
    ->     order_id int not null,
    ->     product_id int not null,,
    ->     quantity int default 1,
    ->     foreign key (order_id) references orders(id),
    ->     foreign key(product_id) references products(id)
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> INSERT INTO order_items (order_id, product_id, quantity) VALUES
    -> (1, 1, 2),
    -> (1, 2, 3),
    -> (2, 3, 1),
    -> (3, 4, 2),
    -> (4, 5, 3),
    -> (5, 6, 4),
    -> (6, 1, 1),
    -> (6, 2, 2),
    -> (6, 3, 3),
    -> (6, 4, 4);
Query OK, 10 rows affected (0.00 sec)
Records: 10  Duplicates: 0  Warnings: 0



//Retrieve the average total of all orders

mysql> select avg(orders.total_amount) as average_order_total from orders;
+---------------------+
| average_order_total |
+---------------------+
|          233.333333 |
+---------------------+
1 row in set (0.00 sec)

mysql>







